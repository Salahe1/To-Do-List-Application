@{
    ViewData["Title"] = "Home Page";
}

@using ToDoList.ViewModel;
@model List<todoVM>

<div class="text-center">
    <h2>Todo List</h2>

    <table class="table table-striped table-bordered mt-4">
        <thead>
            <tr>
                <th scope="col">Libelle</th>
                <th scope="col">Description</th>
                <th scope="col">Stat</th>
                <th scope="col">Date Limite</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var todo in Model.AsEnumerable().Reverse())
            {
                <tr>
                    <td @if (todo.DateLimite < DateTime.Now && todo.State == todoVM.TodoState.Done)
                    {
                        <text>style ="color : red ; text-decoration : line-through;"</text>
                    }
                    @if (todo.DateLimite < DateTime.Now)
                    {
                        <text>style="color: red;"</text>
                    }
                    @if (todo.State == todoVM.TodoState.Done)
                    {
                        <text>style="text-decoration: line-through;"</text>
                    }
                        >@todo.Libelle
                        </td>

                    <td @if (todo.DateLimite < DateTime.Now && todo.State == todoVM.TodoState.Done)
                    {
                        <text>style ="color : red ; text-decoration : line-through;"</text>
                    }
                    @if (todo.DateLimite < DateTime.Now)
                    {
                        <text>style="color: red;"</text>
                    }
                    @if (todo.State == todoVM.TodoState.Done)
                    {
                        <text>style="text-decoration: line-through;"</text>
                    }
                             >@todo.Description
                        </td>

                    <td>
                        @switch (todo.State)
                        {
                            case todoVM.TodoState.ToDo:
                                <span class="badge bg-primary">To Do</span>
                                break;
                            case todoVM.TodoState.Doing:
                                <span class="badge bg-warning">Doing</span>
                                break;
                            case todoVM.TodoState.Done:
                                <span class="badge bg-success">Done</span>
                                break;
                            default:
                                <span class="badge bg-secondary">Unknown</span>
                                break;
                        }
                    </td>

                    <td>
                        @if (todo.DateLimite < DateTime.Now)
                        {
                            <span class="text-danger">@todo.DateLimite.ToShortDateString()</span>
                        }
                        else
                        {
                            @todo.DateLimite.ToShortDateString()
                        }
                    </td>

                    <td>
                        <div class="btn-group">
                            <form method="get" asp-controller="ToDo" asp-action="Modify">
                                <input type="hidden" name="Id" value="@todo.Id" />
                                <button class="btn btn-info" type="submit">
                                    <i class="fas fa-edit"></i> Modifier
                                </button>
                            </form>
                            <form method="post" asp-controller="ToDo" asp-action="Delete" onsubmit="return confirmDelete(event);">
                                <input type="hidden" name="Id" value="@todo.Id" />
                                <button class="btn btn-danger ms-2">
                                    <i class="fas fa-trash-alt"></i> Supprimer
                                </button>
                            </form>
                        </div>
                    </td>

                </tr>
            }
        </tbody>
    </table>

    <form method="get" asp-controller="ToDo" asp-action="Add" class="mt-3">
        <button class="btn btn-primary text-center ">
            <i class="fas fa-plus-circle"></i> ADD a ToDo
        </button>
    </form>

</div>

@section Scripts {
    <script>
        function confirmDelete(event) {
            event.preventDefault(); // Prevent the form from submitting immediately
            swal({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to recover this item!",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        event.target.submit(); // Submit the form if confirmed
                        swal("Poof! Your item has been deleted!", {
                            icon: "success",
                        });
                    } else {
                        swal("Your item is safe!");
                    }
                });
        }
    </script>
    }